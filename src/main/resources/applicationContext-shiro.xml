<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName">
	<!-- 继承自AuthorizingRealm的自定义Realm -->
	<bean id="userRealm" class="com.miles.xiuda.shiro.UserRealm" />

	<!-- 缓存管理器，使用EhCache实现 -->
<!-- 	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> -->
<!--     	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/> -->
<!--     </bean> -->

	<!-- shiro管理中心类 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
	</bean>

	<!-- shiro过滤器，Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 登录页面链接 -->
		<property name="loginUrl" value="/login.html" />
		<!-- 登录成功后跳转的链接 -->
		<property name="successUrl" value="/index.jsp" />
		<!-- 认证未通过跳转的链接 -->
		<property name="unauthorizedUrl" value="/" />
		<!-- Shiro链接约束配置
			 anon：匿名访问（不需要认证与授权）
			 authc：需要认证
		-->
		<property name="filterChainDefinitions">
			<value>
				/js/**=anon
				/css/**=anon
				/images/**=anon
				/login.html=anon
				/sys/login=anon
				/sys/menu/user=anon
				/kaptchaImage=anon
				/**=anon
			</value>
		</property>
	</bean>

	<!-- 保证实现shiro内部的生命周期函数bean的执行 -->
	<!--
		LifecycleBeanPostProcessor用于在实现了Initializable接口的Shiro bean初始化时调用Initializable接口回调，
		在实现了Destroyable接口的Shiro bean销毁时调用 Destroyable接口回调。如UserRealm就实现了Initializable，
		而DefaultSecurityManager实现了Destroyable。
	-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager" />
	</bean>
</beans>